import myfilter.challenges -- hide

open set -- hide

variables {α : Type*} -- hide

/-

# Challenge World

## Level 1 : `lattice.has_inf (filter α)`

Welcome to our final world -- Challenge World. Obviously, these
are some challenging puzzles, so don't worry if you can't get it!

-/

/- Lemma : no-side-bar
The infimum of filters is the filter generated by intersections of elements 
of the two filters.
-/
lemma filter.has_inf : lattice.has_inf (filter α) :=
begin
  sorry
/- hint
let h : filter α → filter α → filter α :=
  λf g, ⟨{s | ∃ (a ∈ f) (b ∈ g), s = a ∩ b }, _, _, _⟩,
{
  use h
},
{
  sorry
},
{
  sorry
},
{
  sorry
}
-/








end

/- The following two lemmas are clearly true and you can find them
on the left:

```
lemma filter.mem_inf_iff {f g : filter α} {s : set α} :
  s ∈ f ⊓ g ↔ ∃ t₁ ∈ f, ∃ t₂ ∈ g, s = t₁ ∩ t₂
```

```
lemma filter.inter_mem_inf {f g : filter α} {s t : set α}
  (hs : s ∈ f) (ht : t ∈ g) : s ∩ t ∈ f ⊓ g
```
-/

/- Axiom : filter.mem_inf_iff {f g : filter α} {s : set α}
s ∈ f ⊓ g ↔ ∃ t₁ ∈ f, ∃ t₂ ∈ g, s = t₁ ∩ t₂
-/

/- Axiom : filter.inter_mem_inf {f g : filter α} {s t : set α} (hs : s ∈ f) (ht : t ∈ g)
s ∩ t ∈ f ⊓ g
-/