import game.world2.level1 -- hide

open set -- hide

variable {α : Type*} -- hide

namespace filter_basis

/- 

# Filter Basis World

## Level 2 : `filter_basis.filter`

Actually, we can construct filter using filter basis:
The filter f generated by filter base B is te collection of all sets fⱼ such
that Bᵢ ⊆ fⱼ for some Bᵢ ∈ B. 
Let's verify that:
-/

/- Lemma
The filter associated to a filter basis.
-/
protected def filter (B : filter_basis α) : filter α := 
{ sets := {s | ∃ t ∈ B, t ⊆ s},
  univ_sets := 
  begin
    sorry
  end,
  upward_closure := 
  begin
    sorry
  end,
  inter_sets := 
  begin
    sorry
  end }

/-
Below are some useful lemmas can be used later:
-/

lemma mem_filter_iff (B : filter_basis α) {s : set α} : 
  s ∈ B.filter ↔ ∃ t ∈ B, t ⊆ s := iff.rfl

lemma mem_filter_of_mem (B : filter_basis α) {s : set α} : 
  s ∈ B → s ∈ B.filter := λ s_in, ⟨s, s_in, subset.refl _⟩

end filter_basis